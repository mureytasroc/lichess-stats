name: lichess-stats.net
on: push

jobs:
  backend-checks:
    name: Backend Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: 1.1.13
      - name: Install Dependencies
        run: poetry install
      - name: Lint (flake8)
        run: poetry run flake8 .
      - name: Lint (black)
        run: poetry run black --check .
      - name: Run Tests
        run: pytest

  build-backend:
    name: Build and Publish Backend
    runs-on: ubuntu-latest
    needs:
      - backend-checks
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Publish Backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ghcr.io/mureytasroc/lichess-stats/backend:${{ github.sha }}

  frontend-checks:
    name: Frontend Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "17"
          cache: "npm"
      - run: npm install
      - run: npm test

  build-frontend:
    name: Build and publish frontend
    runs-on: ubuntu-latest
    needs:
      - frontend-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and publish backend
        uses: docker/build-push-action@v2
        with:
          context: frontend
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ghcr.io/mureytasroc/lichess-stats/frontend:${{ github.sha }}

  deploy:
    name: Deploy latest version of code
    if: github.ref == 'refs/heads/master'
    needs:
      - build-backend
      - build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy code
        run: >-
          cd helm

          aws eks --region us-east-1 update-kubeconfig --name lichess-stats-cluster

          kubectl config set-context --current --namespace default

          helm upgrade --install --atomic lichess-stats ./lichess-stats-chart --timeout 10m
          --set application.secrets.dockerConfigJson=${{ secrets.DOCKER_CONFIG_JSON }}
          --set application.secrets.sentryUrl=${{ secrets.SENTRY_URL }}
          --set application.secrets.adminPassword=${{ secrets.ADMIN_PASSWORD }}
          --set application.gitSHA=${{ github.sha }}

          helm upgrade --install --atomic prometheus prometheus
          --repo https://prometheus-community.github.io/helm-charts
          --values prometheus-values.yaml
          --namespace monitoring --create-namespace

          helm upgrade --install --atomic grafana grafana 
          --repo https://grafana.github.io/helm-charts
          --values grafana-values.yaml
          --set adminPassword=${{ secrets.ADMIN_PASSWORD }}
          --namespace monitoring

          helm upgrade --install --atomic ingress-nginx ingress-nginx
          --repo https://kubernetes.github.io/ingress-nginx
          --namespace ingress-nginx --create-namespace
